#!/usr/bin/python

import psycopg2, time, matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import os

LOG_DIR = '/var/local/energy/log'
SOURCES = {'Atwood': (('AtwoodDorm', 'Atwood', True, '#ff0000'),),
           'Case': (('CaseDorm', 'Case', True, '#ff7a00'),),
           'East': (('EastDorm1', 'East 1', True, '#41db00'),
                    ('EastDorm2', 'East 2', False, '#00bd39')),
           'Linde': (('LindeDorm', 'Linde', True, '#0776a0'),),
           'North': (('NorthDorm1', 'North 1', True, '#c10087'),
                    ('NorthDorm2', 'North 2', False, '#40025f'),
                    ('NorthDorm3', 'North HVAC', True, '#000000')),
           'Sontag': (('SontagDorm', 'Sontag', True, '#a63f00'),),
           'South': (('SouthDorm', 'South', True, '#9c02a7'),),
           'West': (('WestDorm1', 'West 1', True, '#2e16b1'),
                    ('WestDorm2', 'West 2', False, '#5c5c5c'),
                    ('EastDorm3', 'West HVAC', True, '#638700'))}

hours = mdates.MinuteLocator(byminute=(0, 30))
hours_fmt = mdates.DateFormatter('%l:%M %P')

def main():
    from logging import warning, info, debug, basicConfig as logging_basicConfig, INFO
    logging_basicConfig(format='%(asctime)s %(levelname)-8s %(message)s', datefmt='%Y-%m-%d %H:%M:%S', filename=os.path.join(LOG_DIR, 'energygraph.log'), level=INFO)
    conn = psycopg2.connect('dbname=energy user=energy')
    cur = conn.cursor()
    info('Grapher starting work.')
    last_loop_end = time.time()

    while True:
        fig = plt.figure(figsize=(16,8))
        ax1 = fig.add_subplot(111)
        for (k, v) in SOURCES.items():
            for (tb, label, c5, color) in v:
                q = ('SELECT c1 as x, (c3 + c4' + (c5 and ' + c5' or '')
                     + ') / 1000 as y FROM ' + tb + ' WHERE now() - c1 '
                     + '<= interval \'3 hours\' ORDER BY c1 ASC;')
                cur.execute(q)
                x = []
                y = []
                for record in cur:
                    x.append(record[0])
                    y.append(record[1])
                plt.plot_date(x, y, '-', label=label, color=color, xdate=True, ydate=False)
        ax1.xaxis.set_major_locator(hours)
        ax1.xaxis.set_major_formatter(hours_fmt)
    
        # The following three lines make the plot bigger so the legend
        # doesn't cover up the data.  I got tired of trying to figure
        # out how to get the legend outside the graph but still in the
        # image.
        (ymin, ymax) = plt.ylim()
        ymax *= 7.0/6.0 # Seems to work
        plt.ylim(ymin, ymax)
    
        plt.legend(loc='upper left', ncol=7)
        plt.xlabel('time')
        plt.ylabel('power (kilowatts)')
        plt.title('Energy usage in the last three hours')
        # ax1.grid(True)
        # fig.autofmt_xdate() # rotate x-axis labels nicely

        plt.savefig('graph.png', bbox_inches='tight')
        plt.clf()
        plt.close('all')
        os.rename('graph.png', '/var/local/energy/www/graph.png')

        nap = 5 - (time.time() - last_loop_end)
        if nap > 0:
            time.sleep(nap)
        last_loop_end = time.time()

    cur.close()
    conn.close()

if __name__ == '__main__':
    main()
